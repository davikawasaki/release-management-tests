on: 
  workflow_dispatch:
    inputs:
      release_branch:
        description: 'Which specific staging branch will be used to trigger a production release'
        required: true
        default: ''
      type:
        description: 'Which release shall take place - i.e. minor, patch or major'
        required: true
        default: 'minor'

name: Manual release for production
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.actor == 'davikawasaki'
    steps:
      - name: Check branch existence
        run: |
          if [ ${{ github.event.inputs.release_branch }} == '' ]; then
            echo 'Release branch not defined'
            exit 1
          fi
      - name: Check release type
        run: |
          if [ ${{ github.event.inputs.type }} == '' ]; then
            echo 'Release type not defined'
            exit 1
          elif [[ ${{ github.event.inputs.type }} == 'minor' || ${{ github.event.inputs.type }} == 'patch' || ${{ github.event.inputs.type }} == 'major' ]]; then
            echo 'Accepted release types'
          else
            echo 'Release type ${{ github.event.inputs.type }} not accepted'
            exit 1
          fi
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}
          # ref: ${{ github.event.inputs.release_branch }}
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          always-auth: true
          node-version: '14.7.0'
          registry-url: https://npm.pkg.github.com
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Start release
        run: |
          git status
          git config user.name 'Davi Kawasaki'
          git config user.email 'davishinjik@gmail.com'
          RC=staging MASTER=main ./rel version ${{ github.event.inputs.type }}
